{"ast":null,"code":"var _jsxFileName = \"G:\\\\Entornos de Desarrollo\\\\Visual Studio\\\\Proyectos\\\\TicTacToe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick,\n  isWinnerSquare\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${isWinnerSquare ? 'winner-square' : ''}`,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        winningSquares: [a, b, c]\n      };\n    }\n  }\n  return null;\n}\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? 'X' : 'O';\n    onPlay(nextSquares);\n  }\n  const renderSquare = (i, isWinnerSquare) => /*#__PURE__*/_jsxDEV(Square, {\n    value: squares[i],\n    onSquareClick: () => handleClick(i),\n    isWinnerSquare: isWinnerSquare\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n  const renderRow = (start, isWinnerRow) => {\n    const row = [];\n    for (let i = 0; i < 3; i++) {\n      const squareIndex = start + i;\n      const isWinnerSquare = calculateWinner(squares) && calculateWinner(squares).winningSquares.includes(squareIndex);\n      row.push(renderSquare(squareIndex, isWinnerSquare));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `board-row ${isWinnerRow ? 'winner-row' : ''}`,\n      children: row\n    }, start, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  };\n  const renderBoard = () => {\n    const winnerInfo = calculateWinner(squares);\n    const isDraw = squares.every(square => square !== null) && !winnerInfo;\n    if (winnerInfo) {\n      const [a, b, c] = winnerInfo.winningSquares;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status\",\n          children: [\"Ganador: \", winnerInfo.winner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-highlight\",\n          children: [renderRow(0), renderRow(3), renderRow(6)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    } else if (isDraw) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: \"\\xA1Empate!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, this);\n    } else {\n      return renderRows();\n    }\n  };\n  const renderRows = () => {\n    const boardRows = [];\n    for (let i = 0; i < 3; i++) {\n      const isWinnerRow = calculateWinner(squares) && calculateWinner(squares).winningSquares.some(index => index >= i * 3 && index < (i + 1) * 3);\n      boardRows.push(renderRow(i * 3, isWinnerRow));\n    }\n    return boardRows;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderBoard()\n  }, void 0, false);\n}\n_c2 = Board;\nfunction Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [ascendingOrder, setAscendingOrder] = useState(true);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  const toggleOrder = () => {\n    setAscendingOrder(prevOrder => !prevOrder);\n  };\n  const moves = history.map((squares, move) => {\n    const description = move ? 'Ir al movimiento #' + move : 'Ir al inicio del juego';\n    const adjustedMove = ascendingOrder ? move : history.length - 1 - move;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: adjustedMove === currentMove ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Est\\xE1s en el movimiento #\", adjustedMove]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(adjustedMove),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleOrder,\n          children: [\"Orden: \", ascendingOrder ? 'Ascendente' : 'Descendente']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"0nPoRNwJCm+SRZEmUzUg9M4Q6zQ=\");\n_c3 = Game;\nexport default Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","isWinnerSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","calculateWinner","squares","lines","i","length","a","b","c","winner","winningSquares","Board","xIsNext","onPlay","handleClick","nextSquares","slice","renderSquare","renderRow","start","isWinnerRow","row","squareIndex","includes","push","renderBoard","winnerInfo","isDraw","every","square","renderRows","boardRows","some","index","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","ascendingOrder","setAscendingOrder","currentSquares","handlePlay","nextHistory","jumpTo","nextMove","toggleOrder","prevOrder","moves","map","move","description","adjustedMove","_c3","$RefreshReg$"],"sources":["G:/Entornos de Desarrollo/Visual Studio/Proyectos/TicTacToe/src/App.js"],"sourcesContent":["// App.js\n\nimport { useState } from 'react';\n\nfunction Square({ value, onSquareClick, isWinnerSquare }) {\n  return (\n    <button className={`square ${isWinnerSquare ? 'winner-square' : ''}`} onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], winningSquares: [a, b, c] };\n    }\n  }\n\n  return null;\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    nextSquares[i] = xIsNext ? 'X' : 'O';\n    onPlay(nextSquares);\n  }\n\n  const renderSquare = (i, isWinnerSquare) => (\n    <Square\n      key={i}\n      value={squares[i]}\n      onSquareClick={() => handleClick(i)}\n      isWinnerSquare={isWinnerSquare}\n    />\n  );\n\n  const renderRow = (start, isWinnerRow) => {\n    const row = [];\n    for (let i = 0; i < 3; i++) {\n      const squareIndex = start + i;\n      const isWinnerSquare =\n        calculateWinner(squares) && calculateWinner(squares).winningSquares.includes(squareIndex);\n      row.push(renderSquare(squareIndex, isWinnerSquare));\n    }\n    return (\n      <div key={start} className={`board-row ${isWinnerRow ? 'winner-row' : ''}`}>\n        {row}\n      </div>\n    );\n  };\n\n  const renderBoard = () => {\n    const winnerInfo = calculateWinner(squares);\n    const isDraw = squares.every((square) => square !== null) && !winnerInfo;\n\n    if (winnerInfo) {\n      const [a, b, c] = winnerInfo.winningSquares;\n      return (\n        <>\n          <div className=\"status\">Ganador: {winnerInfo.winner}</div>\n          <div className=\"board-highlight\">\n            {renderRow(0)}\n            {renderRow(3)}\n            {renderRow(6)}\n          </div>\n        </>\n      );\n    } else if (isDraw) {\n      return <div className=\"status\">¡Empate!</div>;\n    } else {\n      return renderRows();\n    }\n  };\n\n  const renderRows = () => {\n    const boardRows = [];\n    for (let i = 0; i < 3; i++) {\n      const isWinnerRow =\n        calculateWinner(squares) &&\n        calculateWinner(squares).winningSquares.some((index) => index >= i * 3 && index < (i + 1) * 3);\n      boardRows.push(renderRow(i * 3, isWinnerRow));\n    }\n    return boardRows;\n  };\n\n  return <>{renderBoard()}</>;\n}\n\nfunction Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [ascendingOrder, setAscendingOrder] = useState(true);\n\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  const toggleOrder = () => {\n    setAscendingOrder((prevOrder) => !prevOrder);\n  };\n\n  const moves = history.map((squares, move) => {\n    const description = move ? 'Ir al movimiento #' + move : 'Ir al inicio del juego';\n    const adjustedMove = ascendingOrder ? move : history.length - 1 - move;\n    return (\n      <li key={move}>\n        {adjustedMove === currentMove ? (\n          <span>Estás en el movimiento #{adjustedMove}</span>\n        ) : (\n          <button onClick={() => jumpTo(adjustedMove)}>{description}</button>\n        )}\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <div>\n          <button onClick={toggleOrder}>\n            Orden: {ascendingOrder ? 'Ascendente' : 'Descendente'}\n          </button>\n        </div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}